{"version":3,"sources":["AnimatedMessageWindow-react/AnimatedMessageWindow.js","CircleAnimationButton-react/CircleAnimationButtonTemplate.js","CircleAnimationButton-react/CircleAnimationButtons.js","CircleAnimationButton-react/IconFA.js","App.js","index.js"],"names":["styleTemplate","mainContainerStyle","headStyleOff","headStyleOn","containerStyleOff","containerStyleOn","subContainerStyle","subHeadStyle","AnimatedMessageWindow","props","assignStyle","newStyle","style","Object","assign","getMainContainerStyle","position","textAlign","transform","left","top","fullStyle","getHeadStyleOff","width","widthStyle","height","headHeightStyle","margin","borderRadius","boxShadow","backgroundColor","color","opacity","display","transitionDelay","getHeadStyleOn","getContainerStyleOff","borderBottomLeftRadius","borderBottomRightRadius","borderStyle","borderColor","borderwidth","overflow","marginTop","Number","isInteger","zIndex","getContainerStyleOn","containerHeightStyle","getSubContainerStyle","marginBottom","marginLeft","marginRight","getSubHeadStyle","animationTimeout","headHeight","containerHeight","state","animationStart","animationEnd","prevProps","prevState","this","show","clearTimeout","setTimeout","setState","className","headComponent","headText","children","React","Component","container","containerHover","circleContainer","textContainer","textContainerHover","text","textHover","CircleAnimationButtonTemplate","mouseEnter","hover","mouseLeave","alwaysVisibleText","isMobileDevice","test","navigator","userAgent","containerColor","cursor","alignItems","transition","animationTime","mainContainerHoverStyle","circleContainerStyle","background","linearGradient","iconColor","textContainerStyle","textContainerHoverStyle","autoWidth","textStyle","visibility","verticalAlign","userSelect","textColor","whiteSpace","textHoverStyle","direction","onMouseEnter","onMouseLeave","onClick","icon","CircleAnimationButtonPrimary","CircleAnimationButtonDark","IconFA","iconStyle","size","rotation","flip","pull","fixedWidth","inverse","listItem","spin","pulse","border","swapOpacity","mask","symbol","app","appMainContainer","minHeight","flexDirection","justifyContent","overflowY","fontSize","smallTextStyle","App","onChangeValue","value","hexColor","colorId","onTestShow","testShow","faMouse","faTimes","language","atomDark","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a3313ea.chunk.js","sourcesContent":["import React from 'react';\n\nimport './transitionStyle.css';\n\nconst styleTemplate = {\n    mainContainerStyle: {},\n    headStyleOff: {},\n    headStyleOn: {},\n    containerStyleOff: {},\n    containerStyleOn: {},\n    subContainerStyle: {},\n    subHeadStyle: {}\n}\n\nclass AnimatedMessageWindow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fullStyle = this.assignStyle(this.props.fullStyle);\n\n        this.animationTimeout = null;\n\n        this.headHeightStyle = this.props.headHeight ? this.props.headHeight : 60;\n        this.widthStyle = this.props.width ? this.props.width : 600;\n        this.containerHeightStyle = this.props.containerHeight ? this.props.containerHeight : 100;\n\n        this.state = {\n            animationStart: false,\n            animationEnd: false\n        };\n    }\n\n    assignStyle = (newStyle) => {\n        let style = Object.assign({}, styleTemplate);\n        Object.assign(style, newStyle);\n\n        return style;\n    }\n\n    getMainContainerStyle = () => {\n        let style =  {\n            position: 'absolute',\n            textAlign: 'center',\n            transform: 'translate(-50%, -50%)',\n            left: '50%',\n            top: '50%'\n        }\n\n        style = { ...style, ...this.fullStyle['mainContainerStyle'] }\n\n        if (this.props.style) {\n            style = { ...style, ...this.props.style }\n        }\n\n        return style;\n    }\n\n    getHeadStyleOff = () => {\n        let style = {\n            width: this.widthStyle,\n            height: this.headHeightStyle,\n            margin: 'auto',\n            borderRadius: '2em',\n            boxShadow: '0px 0px 4px #424241',\n            backgroundColor: '#000',\n            color: '#fff',\n        \n            opacity: 0,\n            transform: 'rotateY(-90deg)',\n        \n            display: 'flex',\n        \n            transitionDelay: '0.5s'\n        }\n\n        style = { ...style, ...this.fullStyle['headStyleOff'] }\n\n        return style;\n    }\n\n    getHeadStyleOn = () => {\n        let style = {\n            width: this.widthStyle,\n            height: this.headHeightStyle,\n            margin: 'auto',\n            borderRadius: '2em',\n            boxShadow: '0px 0px 4px #424241',\n            backgroundColor: '#000',\n            color: '#fff',\n        \n            opacity: 1,\n            transform: 'none',\n        \n            display: 'flex'\n        }\n\n        style = { ...style, ...this.fullStyle['headStyleOn'] }\n\n        return style;\n    }\n\n    getContainerStyleOff = () => {\n        let style = {\n            width: this.widthStyle,\n            height: 0,\n            opacity: 0,\n            borderBottomLeftRadius: '2em',\n            borderBottomRightRadius: '2em',\n            borderStyle: 'solid',\n            borderColor: '#333332',\n            borderwidth: 1,\n            backgroundColor: '#FFF',\n            overflow: 'hidden',\n            display: 'flex',\n            position: 'relative',\n\n            marginTop: 'calc(' + (Number.isInteger(this.headHeightStyle) ? this.headHeightStyle + 'px' : this.headHeightStyle) + ' / -2)',\n            zIndex: -1\n        }\n\n        style = { ...style, ...this.fullStyle['containerStyleOff'] }\n\n        return style;\n    }\n\n    getContainerStyleOn = () => {\n        let style = {\n            width: this.widthStyle,\n            height: this.containerHeightStyle,\n            opacity: 1,\n            borderBottomLeftRadius: '2em',\n            borderBottomRightRadius: '2em',\n            borderStyle: 'solid',\n            borderColor: '#333332',\n            borderwidth: 1,\n            backgroundColor: '#FFF',\n            overflow: 'hidden',\n            display: 'flex',\n            position: 'relative',\n            transitionDelay: '0.5s',\n\n            marginTop: 'calc(' + (Number.isInteger(this.headHeightStyle) ? this.headHeightStyle + 'px' : this.headHeightStyle) + ' / -2)',\n            zIndex: -1\n        }\n\n        style = { ...style, ...this.fullStyle['containerStyleOn'] }\n\n        return style;\n    }\n\n    getSubContainerStyle = () => {\n        let style = {\n            marginTop: 'calc(' + (Number.isInteger(this.headHeightStyle) ? this.headHeightStyle + 'px' : this.headHeightStyle) + ' / 2)',\n            marginBottom: 'auto',\n            marginLeft: 'auto',\n            marginRight: 'auto'\n        }\n\n        style = { ...style, ...this.fullStyle['subContainerStyle'] }\n\n        return style;\n    }\n\n    getSubHeadStyle = () => {\n        let style = {\n            margin: 'auto'\n        }\n\n        style = { ...style, ...this.fullStyle['subHeadStyle'] }\n\n        return style;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (!this.state.animationEnd) {\n            if (prevState.animationStart === false) {\n                clearTimeout(this.animationTimeout);\n                this.animationTimeout = setTimeout(() => {\n                    this.setState({ animationStart: true, animationEnd: true });\n                }, 50 );\n            } else {\n                this.state.animationStart = false;\n            }\n        } else if (prevProps.show === true && this.props.show === false) {\n            clearTimeout(this.animationTimeout);\n            this.animationTimeout = setTimeout(() => {\n                this.setState({ animationStart: false, animationEnd: false });\n            }, 1000 );\n        }\n    }\n\n    render() {\n        return (\n            this.props.show ?\n                <div style={ this.getMainContainerStyle() }>\n                    <div className='transition_all_AnimatedMessageWindow' style={ this.state.animationStart ? this.getHeadStyleOn() : this.getHeadStyleOff() }>\n                        { !this.props.headComponent ?\n                            <div style={ this.getSubHeadStyle() }>{ this.props.headText }</div>\n                        :\n                            this.props.headComponent\n                        }\n                    </div>\n\n                    <div className='transition_all_AnimatedMessageWindow' style={ this.state.animationStart ? this.getContainerStyleOn() : this.getContainerStyleOff() }>\n                        <div style={ this.getSubContainerStyle() }>\n                            { this.props.children }\n                        </div>\n                    </div>\n                </div>\n            : this.state.animationEnd ?\n                <div style={ this.getMainContainerStyle() }>\n                    <div className='transition_all_AnimatedMessageWindow' style={ this.state.animationStart ? this.getHeadStyleOff() : this.getHeadStyleOn() }>\n                        { !this.props.headComponent ?\n                            <div style={ this.getSubHeadStyle() }>{ this.props.headText }</div>\n                        :\n                            this.props.headComponent\n                        }\n                    </div>\n\n                    <div className='transition_all_AnimatedMessageWindow' style={ this.state.animationStart ? this.getContainerStyleOff() : this.getContainerStyleOn() }>\n                        <div style={ this.getSubContainerStyle() }>\n                            { this.props.children }\n                        </div>\n                    </div>\n                </div>\n            : null\n        );\n    }\n}\n\nexport default AnimatedMessageWindow;\n","import React from 'react';\n\nconst styleTemplate = {\n    container: {},\n    containerHover: {},\n    circleContainer: {},\n    textContainer: {},\n    textContainerHover: {},\n    text: {},\n    textHover: {}\n}\n\nclass CircleAnimationButtonTemplate extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fullStyle = this.assignStyle(this.props.fullStyle);\n        this.alwaysVisibleText = this.isMobileDevice() || this.props.alwaysVisibleText;\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.autoWidth ? 'max-content' : this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#787875\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#424241\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #424241, #333332\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#FFFFFF\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#FFFFFF\";\n        this.direction = this.props.direction === \"left\" ? 1 : 0;\n\n        this.state = {\n            hover: this.alwaysVisibleText ? true : false\n        };\n    }\n\n    assignStyle = (newStyle) => {\n        let style = Object.assign({}, styleTemplate);\n        Object.assign(style, newStyle);\n\n        return style;\n    }\n\n    mouseEnter = () => {\n        this.setState({ hover: true });\n    }\n\n    mouseLeave = () => {\n        //Off hide text when mobile device\n        if (this.alwaysVisibleText) {\n            return;\n        }\n\n        this.setState({ hover: false });\n    }\n\n    isMobileDevice = () => {\n        return /Android|webOS|iPhone|iPad|iPod/i.test(navigator.userAgent) ? true : false;\n    }\n\n    mainContainerStyle = () => {\n        let style = {\n            height: this.height,\n            width: this.height,\n            backgroundColor: this.containerColor,\n            borderRadius: this.height,\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            boxShadow: '0px 0px 0px 1px ' + this.borderColor,\n            transition: \"width \" + this.animationTime + \"s\"\n        }\n\n        style = { ...style, ...this.fullStyle['container'] };\n\n        if (this.props.style) {\n            style = { ...style, ...this.props.style }\n        }\n\n        return style;\n    }\n\n    mainContainerHoverStyle = () => {\n        let style = {\n            height: this.height,\n            width: this.width,\n            backgroundColor: this.containerColor,\n            borderRadius: this.height,\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            boxShadow: '0px 0px 0px 1px ' + this.borderColor,\n            transition: \"width \" + this.animationTime + \"s\"\n        }\n\n        style = { ...style, ...this.fullStyle['containerHover'] };\n\n        if (this.props.style) {\n            style = { ...style, ...this.props.style }\n        }\n\n        return style;\n    }\n\n    circleContainerStyle = () => {\n        let style = {\n            height: this.height,\n            width: this.height,\n            background: 'linear-gradient(' + this.linearGradient + ')',\n            borderRadius: this.height,\n            alignItems: 'center',\n            display: 'flex',\n            boxShadow: '0px 0px 0px 2px ' + this.borderColor,\n            color: this.iconColor\n        }\n\n        style = { ...style, ...this.fullStyle['circleContainer'] };\n\n        return style;\n    }\n\n    textContainerStyle = () => {\n        let style = {\n            display: 'flex',\n            overflow: 'hidden',\n            height: this.height,\n            width: 0,\n            transition: \"width \" + this.animationTime + \"s\"\n        }\n\n        style = { ...style, ...this.fullStyle['textContainer'] };\n\n        return style;\n    }\n\n    textContainerHoverStyle = () => {\n        let style = {\n            display: 'flex',\n            overflow: 'hidden',\n            height: this.height,\n            width: this.props.autoWidth ? 'calc(100% - ' + this.height + 'px)' : this.width - this.height,\n            transition: \"width \" + this.animationTime + \"s\"\n        }\n\n        style = { ...style, ...this.fullStyle['textContainerHover'] };\n\n        return style;\n    }\n\n    textStyle = () => {\n        let style = {\n            visibility: 'hidden',\n            margin: 'auto',\n            textAlign: 'center',\n            verticalAlign: 'middle',\n            opacity: 0,\n            userSelect: 'none',\n            color: this.textColor,\n            whiteSpace: 'nowrap',\n            transition: \"visibility \" + this.animationTime / 2 + \"s, opacity \" + this.animationTime / 2 + \"s\"\n        }\n\n        if (this.props.autoWidth) {\n            style = { ...style, ...{ transition: \"opacity 0s\" } }\n        }\n\n        style = { ...style, ...this.fullStyle['text'] };\n\n        return style;\n    }\n\n    textHoverStyle = () => {\n        let style = {\n            visibility: 'visible',\n            margin: 'auto',\n            textAlign: 'center',\n            verticalAlign: 'middle',\n            opacity: 1.0,\n            userSelect: 'none',\n            color: this.textColor,\n            whiteSpace: 'nowrap',\n            transition: \"visibility 0s, opacity \" + this.animationTime * 2 + \"s\"\n        }\n\n        if (this.props.autoWidth) {\n            style = { ...style, ...{ marginLeft: 10, marginRight: 10 } }\n        }\n\n        style = { ...style, ...this.fullStyle['textHover'] };\n\n        return style;\n    }\n\n    render() {\n        return (\n            <div\n                style={ !this.state.hover ? this.mainContainerStyle() : this.mainContainerHoverStyle() }\n                onMouseEnter={ this.mouseEnter }\n                onMouseLeave={ this.mouseLeave }\n                onClick={ this.props.onClick }\n            >\n                { this.direction === 1 ?\n                <div style={ !this.state.hover ? this.textContainerStyle() : this.textContainerHoverStyle() }>\n                    <div style={ !this.state.hover ? this.textStyle() : this.textHoverStyle() }>{ this.props.text }</div>\n                </div>\n                : null }\n                <div style={ this.circleContainerStyle() }>\n                    { this.props.icon }\n                </div>\n                { this.direction === 0 ?\n                <div style={ !this.state.hover ? this.textContainerStyle() : this.textContainerHoverStyle() }>\n                    <div\n                        style={ !this.state.hover ? this.textStyle() : this.textHoverStyle() }\n                        onMouseEnter={ null }\n                        onMouseLeave={ null }\n                    >{ this.props.text }</div>\n                </div>\n                : null }\n            </div>\n        );\n    }\n}\n\nexport default CircleAnimationButtonTemplate;\n","import React from 'react';\n\nimport CircleAnimationButtonTemplate from './CircleAnimationButtonTemplate';\n\nexport class CircleAnimationButtonDanger extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#6B1515\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#FF3333\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #FF3333, #D12A2A\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n\nexport class CircleAnimationButtonSuccess extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#236B20\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#50F74A\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #50F74A, #44D13F\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n\nexport class CircleAnimationButtonWarning extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#6B6B17\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#F7F734\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #F7F734, #D1D12C\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n\nexport class CircleAnimationButtonPrimary extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#25446B\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#579FF7\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #579FF7, #4986D1\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n\nexport class CircleAnimationButtonDark extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#787875\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#424241\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #424241, #333332\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#FFFFFF\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#FFFFFF\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n\nexport class CircleAnimationButtonLight extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#474746\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#DEDED9\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #DEDED9, #ADADAA\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n\nexport class CircleAnimationButtonInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.height = this.props.height ? this.props.height : 35;\n        this.width = this.props.width ? this.props.width : 105;\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#22444D\";\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#64CAE3\";\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #64CAE3, #4F9FB3\";\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\n    }\n\n    render() {\n        return (\n            <CircleAnimationButtonTemplate\n                height={ this.height }\n                width={ this.width }\n                borderColor={ this.borderColor }\n                containerColor={ this.containerColor }\n                animationTime={ this.animationTime }\n                linearGradient={ this.linearGradient }\n                iconColor={ this.iconColor }\n                textColor={ this.textColor }\n                direction={ this.props.direction }\n                alwaysVisibleText={ this.props.alwaysVisibleText }\n                autoWidth={ this.props.autoWidth }\n                style={ this.props.style }\n                fullStyle={ this.props.fullStyle }\n                icon={ this.props.icon }\n                text={ this.props.text }\n                onClick={ this.props.onClick }\n            />\n        );\n    }\n}\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass IconFA extends React.Component {\n    iconStyle = () => {\n        let style = {\n            margin: 'auto'\n        }\n\n        style = { ...style, ...this.props.style };\n\n        return style;\n    }\n\n    render() {\n        return (\n            <FontAwesomeIcon\n                style={ this.iconStyle() }\n                icon={ this.props.icon }\n                size={ this.props.size }\n                rotation={ this.props.rotation }\n                flip={ this.props.flip }\n                pull={ this.props.pull }\n                fixedWidth={ this.props.fixedWidth }\n                inverse={ this.props.inverse }\n                listItem={ this.props.listItem }\n                spin={ this.props.spin }\n                pulse={ this.props.pulse }\n                border={ this.props.border }\n                swapOpacity={ this.props.swapOpacity }\n                className={ this.props.className }\n                transform={ this.props.transform }\n                mask={ this.props.mask }\n                color={ this.props.color }\n                symbol={ this.props.symbol }\n            />\n        );\n    }\n}\n\nexport default IconFA;\n","import React from 'react';\n\nimport AnimatedMessageWindow from './AnimatedMessageWindow-react/AnimatedMessageWindow';\n\nimport { CircleAnimationButtonPrimary, CircleAnimationButtonDark } from './CircleAnimationButton-react/CircleAnimationButtons';\nimport IconFA from './CircleAnimationButton-react/IconFA'\n\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nimport { faTimes, faMouse } from \"@fortawesome/free-solid-svg-icons\";\n\nconst app = {\n    textAlign: 'center'\n}\n\nconst appMainContainer = {\n    backgroundColor: '#282c34',\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflowY: 'auto'\n}\n\nconst textStyle = {\n    fontSize: 'calc(10px + 2vmin)',\n    color: 'white'\n}\n\nconst smallTextStyle = {\n    fontSize: 'calc(10px + 1vmin)',\n    color: 'white'\n}\n\nconst code0 = \"<AnimatedMessageWindow\\n\\tshow={ this.state.testShow ? true : false }\\n\\theadText={ \\\"Animated message window\\\" }\\n>\\n\\t{ /* Code here */ }\\n</AnimatedMessageWindow>\";\nconst code1 = \"<AnimatedMessageWindow\\n\\tshow={ true }                                                // undefined | [true/false] show/hide component\\n\\theadText={ \\\"Test\\\" }                                          // \\\"\\\" | Set header text\\n\\theadComponent={ <div style={{ margin: 'auto' }}>TEXT</div> } // undefined | Set component to header instead text\\n\\tcontainerHeight={ '40vh' }                                   // 100px | Content container height\\n\\theadHeight={ 60 }                                            // 60px | Header height\\n\\theadWidth={ 600 }                                            // 600px | Component width\\n\\tstyle={{ top: '10%' }}                                       // {} | Set style for container only (fast styling)\\n\\tfullStyle={{ style }}                                        // {} | Set full button styling (more info in Example (jsx styling))\\n>\\n</AnimatedMessageWindow>\";\nconst code2 = \"<AnimatedMessageWindow\\n\\tshow={ true }\\n\\theadText={ \\\"Animated message window\\\" }\\n\\tstyle={{ top: '30%' }}\\n>\\n\\t{ /* Code here */ }\\n</AnimatedMessageWindow>\";\nconst code3 = \"const styleTemplate = {\\n\\tmainContainerStyle: {},\\n\\theadStyleOff: {},\\n\\theadStyleOn: {},\\n\\tcontainerStyleOff: {},\\n\\tcontainerStyleOn: {},\\n\\tsubContainerStyle: {},\\n\\tsubHeadStyle: {}\\n}\";\nconst code4 = \"let fullStyle = {\\n\\tmainContainerStyle: {\\n\\t\\ttop: '30%'\\n\\t},\\n\\theadStyleOff: {\\n\\t\\tbackgroundColor: \\\"#000000\\\"\\n\\t},\\n\\theadStyleOn: {\\n\\t\\tbackgroundColor: \\\"#FFFFFF\\\"\\n\\t},\\n\\tsubHeadStyle: {\\n\\t\\tfontSize: 25\\n\\t}\\n}\";\nconst code5 = \"fullStyle={ fullStyle } //Default: {}\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            testShow: false\n        }\n    }\n\n    onChangeValue = (value, hexColor) => {\n        this.setState({ colorId: value, hexColor: hexColor });\n    }\n\n    onTestShow = () => {\n        this.setState({ testShow: !this.state.testShow });\n    }\n\n    render() {\n        return (\n            <div style={ app }>\n                <div style={ appMainContainer }>\n                    <p style={ textStyle }>\n                        Example <code>AnimatedMessageWindow-react</code>\n                    </p>\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n\n                    <p style={ textStyle }>\n                        Test\n                    </p>\n\n                    <CircleAnimationButtonPrimary\n                        icon={ <IconFA icon={ faMouse }/> }\n                        text={ \"Click here\" }\n                        alwaysVisibleText={ true }\n\t                    autoWidth={ true }\n                        onClick={ this.onTestShow }\n                    />\n\n                    <AnimatedMessageWindow\n                        show={ this.state.testShow ? true : false }\n                        headText={ \"Animated message window\" }\n                    >\n                        <div>\n                            Some text with no sense.\n                        </div>\n                        <CircleAnimationButtonDark\n                            icon={ <IconFA icon={ faTimes }/> }\n                            text={ \"Close\" }\n                            onClick={ this.onTestShow }\n                            style={{ marginTop: 5, marginLeft: 'auto', marginRight: 'auto' }}\n                        />\n                    </AnimatedMessageWindow>\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code0 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        All options\n                    </p>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code1 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        Fast styling\n                    </p>\n\n                    <p style={ smallTextStyle }>\n                        Stylize like normal HTML element\n                    </p>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code2 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        Full styling\n                    </p>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code3 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        Example (jsx full styling):\n                    </p>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code4 }\n                    </SyntaxHighlighter>\n\n                    <p style={ textStyle }>\n                        Put to component:\n                    </p>\n\n                    <SyntaxHighlighter language=\"jsx\" style={ atomDark }>\n                        { code5 }\n                    </SyntaxHighlighter>\n\n                    <div style={{ marginTop: 5, marginBottom: 5 }}></div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}